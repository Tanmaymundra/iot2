#include <SoftwareSerial.h>

SoftwareSerial gps(10,11); //RX,TX
String data="";
int mark = 0;
boolean Mark_Start=false;
boolean valid=false;
String GGAUTCtime,GGAlatitude,GGAlongitude,GPStatus,SatelliteNum,HDOPfactor,Height,PositionValid,RMCUTCtime,RMClatitude,RMClongitude,Speed,Direction,Date,Declination,Mode;
String DateDay,DateMon,DateYear;
int time1,time2,time3;
void setup(){
  Serial.begin(9600);
  gps.begin(9600);
  Serial.println(0);
  delay(1000);
}

void loop(){
  
gps_loc();  
 
}







void gps_loc(){
while (gps.available()> 0){
    if(Mark_Start){
      data=reader();
      //Serial.println(data);
      if(data.equals("GPGGA")){
        //Serial.println(1);
        GGAUTCtime=reader();
        GGAlatitude=reader();
        GGAlatitude+=reader();
        GGAlongitude=reader();
        GGAlongitude+=reader();
        GPStatus=reader();
        SatelliteNum=reader();
        HDOPfactor=reader();
        Height=reader();
        Mark_Start=false;
        valid=true;
        data="";

      }
      else if(data.equals("GPGSA")){
        //Serial.println(2);
        Mark_Start=false;
        data="";
      }
      else if(data.equals("GPGSV")){
        //Serial.println(3);
        Mark_Start=false;
        data="";
      }
      else if(data.equals("GPRMC")){
        //Serial.println(4);
        RMCUTCtime=reader();
        RMCUTCtime=RMCUTCtime.substring(0,6);
        time1=(RMCUTCtime.substring(0,2)).toInt();
        time2=(RMCUTCtime.substring(2,4)).toInt();
        time3=(RMCUTCtime.substring(4,6)).toInt();
        PositionValid=reader();
        RMClatitude=reader();
        RMClatitude+=reader();
        RMClongitude=reader();
        RMClongitude+=reader();
        Speed=reader();
        Direction=reader();
        Date=reader();
        Declination=reader();
        Declination+=reader();
        Mode=reader();
        valid=true;
        Mark_Start=false;
        data="";
        DateDay=Date.substring(0,2);
        DateMon=Date.substring(2,4);
        DateYear=Date.substring(4,6);
        
      }
      else if(data.equals("GPVTG")){
        //Serial.println(5);
        Mark_Start=false;
        data="";
      }
      else{
        //Serial.println(6);
        Mark_Start=false;
        data="";
      }
    }
    if(valid){

      Serial.println("Information Package to be Sent");
      Serial.println("");
      if(PositionValid=="A"){
        Serial.println("Position Valid");

      Serial.println("Date:" + DateDay + "/" +DateMon + "/20" +DateYear);
      Serial.println("UTCtime :" +RMCUTCtime);
//    Serial.println("UTCtime: " + time1 + " : " + time2 + ":" + time3);           //+ "  " + GGAUTCtime
      Serial.println("Latitude: " + RMClatitude);       // + "   " + GGAlatitude
      Serial.println("Longitude: " + RMClongitude);       // + "   " + GGAlongitude
      Serial.println("GPStatus: " + GPStatus);
      Serial.println("SatelliteNum: " + SatelliteNum);
      Serial.println("HDOPfactor: " + HDOPfactor);
      //Serial.println("Height: " + Height);
      Serial.println("Speed: " + Speed);
      Serial.println("Direction: " + Direction);
      //Serial.println("Declination: " + Declination);
      Serial.println("Mode: " + Mode );
           
      valid=false;
      
      }
      else{
        Serial.println("Your position is not valid.");
        Serial.println("Make Sure you are in Open Space aka OutDoor");
        Serial.println("Mode : B"); 
      
      }
      Serial.println("");
      
    }
    if(gps.find("$")){
      //Serial.println("Capture Mode");
      Mark_Start=true;
    }
  }

}


String reader(){
  String value="";
  int temp;
startover:
  while (gps.available() > 0){
    delay(2);
    temp=gps.read();
    if((temp==',')||(temp=='*')){
      if(value.length()){
        //Serial.println("meaningful message");
        return value;
      }
      else {
        //Serial.println("empty");
        return "";
      }     
    }
    else if(temp=='$'){
      //Serial.println("failure");
      Mark_Start=false;
    }
    else{
      //Serial.println("add");
      value+=char(temp);
    }
  }
  while (!(gps.available()>0)){
  }
  goto startover;
}
